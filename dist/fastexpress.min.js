!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("ramda"),require("moment"),require("bcrypt"),require("jsonwebtoken"),require("sequelize")):"function"==typeof define&&define.amd?define(["exports","ramda","moment","bcrypt","jsonwebtoken","sequelize"],t):t(e.fastexpress={},e.R,e.Moment,e.bcrypt,e.jwt,e.sequelize)}(this,function(e,t,r,a,o,n){"use strict";var s="default"in t?t.default:t;r=r&&r.hasOwnProperty("default")?r.default:r,a=a&&a.hasOwnProperty("default")?a.default:a,o=o&&o.hasOwnProperty("default")?o.default:o;const i=async(e,t,r)=>{try{t.json(await r(e))}catch(e){t.status(500).json({error:e.message})}};var d={list:i,create:i,get:async(e,t,r)=>{try{t.json(await r(e))}catch(e){"not found"===e.message?t.status(404).send(e.message):t.status(500).send(e)}},update:i,destroy:async(e,t,r)=>{try{await r(e),t.status(204).send()}catch(e){t.status(500).send(e)}}};const l=["create","get","list","destroy","update"],{table:c}=require("./create");module.exports={dropTable:e=>t=>t.dropTable(e),createTable:(e,t,r=(()=>{}))=>(a,o)=>a.createTable(e,{...c(o,{...t(o)})}).then(()=>r(a,o)),addConstraint:(e,t,{tableName:r,field:a,name:o})=>e.addConstraint(t,[a],{type:"foreign key",name:o,references:{table:r,field:"id"},onDelete:"cascade",onUpdate:"no action"})};var u=Object.freeze({});const p=e=>({id:{allowNull:!1,autoIncrement:!0,primaryKey:!0,type:e.INTEGER}}),y=e=>({createdAt:{allowNull:!1,type:e.DATE},updatedAt:{allowNull:!1,type:e.DATE}});module.exports={id:p,timestamp:y,table:(e,t={})=>({...p(e),...t,...y(e)})};var f=Object.freeze({});const m=(e,t,r)=>{const a=((e,t)=>Math.ceil(e/t))(e,r);return{totalItems:e,currentPage:t,perPage:r,totalPages:a,nextPage:((e,t)=>t>e?e+1:null)(t,a),previousPage:(e=>e>1?e-1:null)(t)}},b=(e,t={})=>{const r={};return Object.keys(e).forEach(a=>{void 0!==t[a]&&e[a].validation(t[a])?r[a]=void 0!==e[a].convert?e[a].convert(t[a],a):t[a]:void 0!==e[a].default&&(r[a]=e[a].default)}),r},h=s.compose(Boolean,s.length),g=e=>Number.isInteger(parseInt(e,10)),w=e=>!Number.isNaN(parseFloat(e)),v=e=>"boolean"==typeof!!e;var O=Object.freeze({string:h,number:g,float:w,bool:v});const T=e=>{return e.split(",").map(e=>e.split("."))};var $=Object.freeze({orderToFilter:T,default:T});const j={validation:h},q={validation:g},E={validation:w,convert:e=>"string"==typeof e?e.replace(",","."):e},N={validation:v},k={validation:h},P={validation:h,convert:e=>r(e).format("YYYY-MM-DD")},S={validation:h,convert:T,default:[["id","DESC"]]},A=j,x={...q,default:100},z={...q,default:1};var D=Object.freeze({stringType:j,numberType:q,floatType:E,boolType:N,datetimeType:k,dateType:P,orderType:S,batchSelType:A,limitSelType:x,pageSelType:z});const I={where:{},filter:null,aliasDatabase:{}},C=(e,t)=>r=>{const a=Object.keys(e);if(a.includes(r)){const o=a[a.indexOf(r)];return{model:t[e[o]],as:r}}return{model:t[r]}},M=({query:e},{options:t,database:r})=>(a={})=>{const{aliasDatabase:o}={...I,...t},{batch:n}=b({batch:A},e);if(n){let e=n.split(",");e=e.map(C(o,r)),a.include=e}return a};var F={list:async(e,r,a)=>{const{limit:o,page:n}=b({limit:x,page:z},e.query),s=t.compose((({query:e})=>(t={})=>{const{limit:r,page:a,order:o}=b({limit:x,page:z,order:S},e);return{...t,limit:r,offset:parseInt(r,10)*(a-1),order:o}})(e),M(e,a),(({query:e},{options:t})=>(r={})=>{const{filters:a}={...I,...t};return a&&(r.where=b(a,e)),r})(e,a))(),i=s.where?s.where:{};try{const e=await r.findAll(s),{count:t}=await r.findAndCountAll({where:i}),a=m(t,n,o);return{data:JSON.parse(JSON.stringify(e)),pagination:a}}catch(e){throw console.error(e),Error("not found")}},create:async({body:e},t,{definitions:r})=>{const a=b(r,e);try{return await t.create(a)}catch(e){throw e}},get:async(e,t,r)=>{const{id:a}=e.params,o=M(e,r)({where:{id:a}});try{const e=await t.findOne(o);if(!e)throw Error("not found");return JSON.parse(JSON.stringify(e))}catch(e){throw console.error(e),Error("not found")}},update:async({params:e,body:t},r,{definitions:a})=>{const{id:o}=e,n=b(a,t);try{const e=await r.findById(o);if(!e)throw Error("not found");return await e.update(n)}catch(e){if("not found"===e.message)throw Error("not found");throw Error("unprocessable entity")}},destroy:async(e,t)=>{const{id:r}=e.params;try{return await t.destroy({where:{id:r}}),!0}catch(e){throw Error("unprocessable entity")}}};const J=(e,{router:t,middleware:r,controller:a})=>{t.get(`${e}/`,r,a.list),t.post(`${e}/`,r,a.create),t.get(`${e}/:id`,r,a.get),t.delete(`${e}/:id`,r,a.destroy),t.put(`${e}/:id`,r,a.update)},Y=e=>`/${e}`,B={validation:()=>!0,convert:e=>{if(e.indexOf(",")>-1){const t=e.split(","),[r,a]=t;return{[n.Op.gte]:r,[n.Op.lte]:a}}return e}};e.createMiddleware=(e=>[(e=>(t,r,a)=>{const n=(e=>void 0!==e.body.token?e.body.token:void 0!==e.query.token?e.query.token:void 0!==e.headers.authorization?e.headers.authorization.replace("Bearer ",""):null)(t);n?o.verify(n,e,(e,t)=>{e?r.status(500).send({message:"Invalid auth token provided."}):(r.user=t,a())}):r.status(403).send({message:"No token provided"})})(e),(e,t,r)=>{let a="UserId";"/api/v1/users/"===e.route.path&&(a="id"),e.query={...e.query,[a]:t.user.id},e.body={...e.body,[a]:t.user.id},r()}]),e.Controller=d,e.dateFilter=B,e.orderToFilter=T,e.cryptPassword=(e=>t=>t.password!==t._previousDataValues.password?a.hash(t.password,a.genSaltSync(e)).then(e=>{t.password=e}):null),e.getModelAlias=C,e.paginationParse=m,e.resources=((e,{router:t,controller:r})=>{t.get(`${e}/`,r.list),t.post(`${e}/`,r.create),t.get(`${e}/:id`,r.get),t.delete(`${e}/:id`,r.destroy),t.put(`${e}/:id`,r.update)}),e.resourcesAuth=J,e.namespaceCreator=((e="/")=>(t="")=>`${e}${t}`),e.namespaceIndexCreator=(e=>t=>e().split("/").filter(e=>!!e).reduceRight((e,t)=>({[t]:e}),t)),e.resourceList=((e,{custom:t=[],namespace:r=Y}={})=>[...[e=>`[get] ${e}`,e=>`[post] ${e}`,e=>`[get] ${e}/:id`,e=>`[delete] ${e}/:id`,e=>`[put] ${e}/:id`].map(t=>t(r(e))),...t]),e.resourceWithAuth=((e,t,{router:r,middleware:a,namespace:o=Y})=>J(o(e),{controller:t,router:r,middleware:a})),e.selector=b,e.validate=O,e.convert=$,e.Service=F,e.createController=((e,{only:t=l,custom:r={}}={})=>{const a={};return t.forEach(t=>{a[t]=((r,a)=>d[t](r,a,e[t]))}),{...a,...r}}),e.createService=((e,{only:t=l,definitions:r={},options:a={},custom:o={},database:n})=>{const s={definitions:r,options:a,database:n},i=t.reduce((e,t)=>({...e,[t]:F[t]}),o);return Object.keys(i).map(t=>({[t]:r=>i[t](r,e,s)})).reduce((e,t)=>Object.assign(e,t),{})}),e.serviceDefaultProps=(({form:e,filters:t,database:r})=>({definitions:e,options:{filters:t},database:r})),e.migrationActions=u,e.migrationHelper=f,e.type=D,Object.defineProperty(e,"__esModule",{value:!0})});
